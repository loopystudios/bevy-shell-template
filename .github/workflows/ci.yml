name: CI
on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Toolchain (clippy)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          components: clippy

      - name: Lint | Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets -- -D warnings

      - name: Setup | Toolchain (rustfmt)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          components: rustfmt

      - name: Lint | Rustfmt
        run: cargo fmt -- --check

  check:
    needs: check # Ensure check is run first.
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal

      - name: Setup | Ubuntu dependencies
        if: ${{ matrix.os }} == 'ubuntu-latest'
        run: sudo apt install libasound2-dev libudev-dev pkg-config

      - name: Check
        run: cargo check

  build:
    needs: check
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal

      - name: Setup | Ubuntu dependencies
        if: ${{ matrix.os }} == 'ubuntu-latest'
        run: sudo apt install libasound2-dev libudev-dev pkg-config

      - name: Build
        run: cargo build

  build-wasm:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Trunk
        uses: jetli/trunk-action@v0.4.0
        with:
          version: "latest"

      - name: Build | Trunk
        run: trunk build

      - name: Post Setup | Upload dist
        uses: actions/upload-artifact@v3
        with:
          path: ./dist/

  docker-wasm:
    needs: build-wasm
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Download dist
        uses: actions/download-artifact@v3
      - name: Setup | Place dist
        run: mv ./artifact/ ./dist/

      - name: Setup | Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup | Build Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./CI.Dockerfile
          push: false

  test:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal

      - name: Setup | Ubuntu dependencies
        if: ${{ matrix.os }} == 'ubuntu-latest'
        run: sudo apt install libasound2-dev libudev-dev pkg-config

      - name: Test
        run: cargo test
